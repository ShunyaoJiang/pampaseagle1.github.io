{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to My Page","text":"<p>Here are notes of some courses.Some problems that are not so trival and something else interesting may be displayed.</p>"},{"location":"note/Computer_Science/FPA/","title":"FPA","text":""},{"location":"note/Computer_Science/FPA/#some-points-in-c-programming","title":"Some points in C Programming","text":""},{"location":"note/Computer_Science/FPA/#week1","title":"Week1","text":"<p>P1.C\u8bed\u8a00\u7684\u6807\u8bc6\u7b26\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u5176\u4ed6\u4efb\u610f\u5b57\u7b26\u7ec4\u6210\u3002(T/F)</p> answer &amp; analysis F.\u5e94\u5f53\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\u7ec4\u6210\uff0c\u5176\u4e2d\u9996\u5b57\u7b26\u4e0d\u80fd\u4e3a\u4e0b\u5212\u7ebf\u3002\u5b9e\u9645\u8fd0\u884c\u4e2d\uff0c\u5305\u542b $ \u7684\u6807\u8bc6\u7b26(identifier) \u4e5f\u53ef\u4ee5\u7f16\u8bd1\u901a\u8fc7\u3002\u5728\u8fd9\u6837\u7684\u6807\u8bc6\u7b26\u4e2d\uff0c$ \u5b57\u7b26\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u9996\u5b57\u7b26\u3002  <p> P2.</p> <pre><code>int n=5,x;\nx=n++;\nthe value of x will be 5. (T/F)\n</code></pre> answer &amp; analysis T.n\u53d8\u4e3a6\u5b9e\u9645\u4e0a\u662fn++\u7684side effect\uff0c\u5728\u6b64\u4e4b\u524d\u5df2\u7ecf\u5c06n\u7684\u503c\u8d4b\u7ed9x\u3002  <p> P3.</p> <pre><code>int k=2;\nwhile (k=0){\n    printf(\"%d\",k);\n    k--;\n}\n</code></pre> <p>while\u5faa\u73af\u6267\u884c()\u6b21\u3002</p> answer &amp; analysis 0.while (k=0)\u4e2d\u6761\u4ef6\u8868\u8fbe\u5f0f\u503c\u4e3a0\uff0cwhile\u5faa\u73af\u4e0d\u6267\u884c\u3002\uff08\u82e5\u6539\u4e3awhile (k=1)\uff0c\u5219\u4e3a\u65e0\u9650\u5faa\u73af\u3002\uff09  <p></p> <p></p>"},{"location":"note/Computer_Science/FPA/#week3","title":"Week3","text":"<p>P1.The following text is part of error information threw by the compiler when compiling some buggy C program. Id:symbol(s) not found for architecrture x86-64 clang:error:linker command failed with exit code 1 Which of the following problems exist in the C program is related to the information? A.Some variable is used without definition. B.A neccessary semicolon ';' is missing. C.The program does not include the header file stdio.h but uses function printf. D.The only function in the program is named mian.</p> answer &amp; analysis D.\u94fe\u63a5\u5668\u4f1a\u9ed8\u8ba4\u4ee5\u540d\u5b57\u4e3amain\u7684\u51fd\u6570\u4f5c\u4e3a\u5165\u53e3\uff0c\u5219\u6b64\u65f6\u94fe\u63a5\u5668\u4f1a\u56e0\u4e3a\u627e\u4e0d\u5230main\u51fd\u6570\u800c\u51fa\u9519\u3002\uff08\u4e8b\u5b9e\u4e0a\u7f16\u8bd1\u5668\u4e0d\u62a5\u9519\u3002\uff09  <p></p> <p>P2.\u5bf9\u4e8e\u5b9a\u4e49int a[5];\u53ef\u4ee5\u901a\u8fc7\u8bed\u53e5scanf(\"%d\",a);\u8f93\u5165\u5168\u90e8\u5143\u7d20\u7684\u503c\u3002(T/F)</p> answer &amp; analysis F.\u8fd9\u4e0d\u540c\u4e8echar a[5]\u3002  <p></p> <p>P3.\u4ee5\u4e0b\u4ee3\u7801\uff0c\u8bed\u6cd5\u6b63\u786e\u7684\u662f\uff1a</p> <pre><code>A.while ( ) ;\nB.for ( ) ;\nC.for (;;) ;\nD.do { } while ( );\n</code></pre> answer &amp; analysis C.\";\"\u662f\u4e00\u4e2a\u7a7a\u8bed\u53e5\u3002  <p> </p>"},{"location":"note/Computer_Science/FPA/#week4","title":"Week4","text":"<p>P1.sizeof()\u662fC\u8bed\u8a00\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u53ef\u4ee5\u8ba1\u7b97\u53c2\u91cf\u6240\u5360\u5185\u5b58\u7684\u5b57\u8282\u6570\u3002\u5982sizeof(int)\u53ef\u8ba1\u7b97\u6574\u578b\u6240\u5360\u7684\u5b57\u8282\u6570\u3002(T/F)</p> answer &amp; analysis F.sizeof\u662f\u5173\u952e\u5b57\u800c\u4e0d\u662f\u51fd\u6570\u3002sizeof\u7684\u4e24\u79cd\u7528\u6cd5\uff1asizeof (\u7c7b\u578b)\u3001sizeof \u8868\u8fbe\u5f0f\u3002  <p></p> <p>P2.C\u8bed\u8a00\u4e2d\uff0c\u901a\u8fc7\u51fd\u6570\u8c03\u7528\u53ea\u80fd\u83b7\u5f97\u4e00\u4e2a\u8fd4\u56de\u503c\u3002(T/F)</p> answer &amp; analysis F.\u51fd\u6570\u8c03\u7528\u83b7\u5f97\u7684\u8fd4\u56de\u503c\u4e3a0\u62161\u4e2a\u3002  <p></p> <p>P3.\u5728C\u8bed\u8a00\u7a0b\u5e8f\u4e2d\uff0c\u82e5\u5bf9\u51fd\u6570\u7c7b\u578b\u672a\u52a0\u663e\u5f0f\u8bf4\u660e\uff0c\u5219\u51fd\u6570\u7684\u9690\u542b\u7c7b\u578b\u4e3a\uff08\uff09\u3002</p> <pre><code>A.void\nB.double\nC.char\nD.int\n</code></pre> answer &amp; analysis D.  <p> </p>"},{"location":"note/Computer_Science/FPA/#week5","title":"Week5","text":"<p>P1.\u4ee5\u4e0b\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff1a</p> <pre><code>A.\u4e00\u4e2aC\u8bed\u8a00\uff08\u6e90\u6587\u4ef6.c\u6587\u4ef6\uff09\u5fc5\u987b\u5305\u542bmain\u51fd\u6570\nB.\u4e00\u4e2aC\u8bed\u8a00\u6e90\u6587\u4ef6\uff08.c\u6587\u4ef6\uff09\u53ef\u4ee5\u5305\u542b\u4e24\u4e2a\u4ee5\u4e0amain\u51fd\u6570\nC.C\u8bed\u8a00\u5934\u6587\u4ef6\uff08.h\u6587\u4ef6\uff09\u548c\u6e90\u6587\u4ef6\uff08.c\u6587\u4ef6\uff09\u90fd\u53ef\u4ee5\u8fdb\u884c\u7f16\u8bd1\nD.\u5728\u4e00\u4e2a\u53ef\u4ee5\u6b63\u786e\u6267\u884c\u7684C\u8bed\u8a00\u7a0b\u5e8f\u4e2d\uff0c\u4e00\u4e2aC\u8bed\u8a00\u51fd\u6570\u7684\u58f0\u660e\uff08\u539f\u578b\uff09\u53ef\u4ee5\u51fa\u73b0\u4efb\u610f\u591a\u6b21\u3002\n</code></pre> answer &amp; analysis C.\u8fd9\u9898\u53ef\u80fd\u9519\u9009A\uff0c\u4e8b\u5b9e\u4e0a\u591a\u6587\u4ef6\u7f16\u7a0b\u65f6\uff0c\u53ea\u9700\u8981\u4e00\u4e2a.c\u6587\u4ef6\u5305\u542bmain\u51fd\u6570\u5373\u53ef\u3002  <p></p>"},{"location":"note/Computer_Science/FPA/#week6","title":"Week6","text":"<p>P1.Among the following C code segments,which one generates the following error when compiling? error:implicit declaration of funciton is invalid in C99</p> <p>A.</p> <pre><code>int my_pow(int a,int b)\nint main()\n{\n    int a = my_pow(2,6);\n}\n</code></pre> <p>B.</p> <pre><code>int my_pow(int a,int b) {}\nint main()\n{\n    int a = my_pow(2,6);\n}\n</code></pre> <p>C.</p> <pre><code>int main()\n{\n    int a = my_pow(2,6);\n}\nint my_pow(int a,int b) {}\n</code></pre> <p>D.</p> <pre><code>int my_pow(int a,int b);\nint main()\n{\n    int a = my_pow(2,6);\n}\nint my_pow(int a,int b) {}\n</code></pre> answer &amp; analysis C.\u5728C\u8bed\u8a00\u4e2d\uff0c\u5f53\u8c03\u7528\u4e00\u4e2a\u5728\u8c03\u7528\u65f6\u5c1a\u672a\u88ab\u58f0\u660e\u7684\u51fd\u6570\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u7ed9\u51faimplicit declaration of function\u7684error\u62a5\u9519\uff0c\u5c5e\u4e8e\u7f16\u8bd1\u9636\u6bb5\u9519\u8bef\uff0c\u53ea\u6709C\u9879\u7b26\u5408\u5728\u8c03\u7528\u65f6\u5c1a\u672a\u58f0\u660e\uff1b\u5f53\u67d0\u4e2a\u88ab\u8c03\u7528\u7684\u51fd\u6570\u53ea\u6709\u58f0\u660e\u6ca1\u6709\u5b9a\u4e49\u65f6\u4f1a\u7ed9\u51faUndefined symbols\u3001symbol(s) not found\u7b49error\u62a5\u9519\uff0c\u4f46\u8fd9\u79cd\u62a5\u9519\u672c\u8d28\u662f\u94fe\u63a5\u9519\u8bef(linker command failed with exit code 1)\uff0c\u662f\u5728\u7f16\u8bd1\u5b8c\u6210\u540e\u94fe\u63a5\u9636\u6bb5\u7684\u9519\u8bef\uff0cA\u9879\u4f1a\u62a5\u6b64\u9519\uff1b\u5f53\u67d0\u4e2a\u8fd4\u56de\u503c\u7c7b\u578b\u4e0d\u4e3avoid\u7684\u51fd\u6570\u6ca1\u6709\u8fd4\u56de\u503c\u65f6\uff0c\u7f16\u8bd1\u5668\u4e00\u822c\u4e4b\u62a5warning\u6216\u8005\u4e0d\u62a5\u9519\uff0c\u4e0d\u4f1a\u62a5error\u3002\u5982\u679c\u8c03\u7528\u4e86\u8be5\u51fd\u6570\u5e76\u53d6\u5f97\u8fd4\u56de\u503c\uff0c\u4e00\u822c\u53d6\u5f97\u4e00\u4e2a\u4e0d\u786e\u5b9a\u503c\uff0cB\u3001D\u9879\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u3002  <p></p> <p>P2.Among these definition of 2-d arrays,which is/are correct? A.int a[1][2]; B.int a[][2]; C.int a[][2] = {0}; D.int a[][2] = {0,1,2,3,4}; E.int a[][2] = {{0,1},{2,3},}; F.int a[2][] = {{0,1},{2,3}};</p> answer &amp; analysis ACDE. A\u9879\u521b\u5efa\u4e00\u4e2a1*2\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u6ca1\u95ee\u9898\uff1b  B\u9879\u521b\u5efa\u7684\u6570\u7ec4\u5927\u5c0f\u672a\u77e5\uff0c\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\uff1b C\u3001D\u9879\u521b\u5efa\u4e00\u4e2a2\u5217\uff08\u7b2c\u4e00\u7ef4\uff09\u82e5\u5e72\u884c\uff08\u7b2c\u4e8c\u7ef4\uff09\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u884c\u6570\u7531\u521d\u59cb\u5316\u65f6\u7ed9\u5b9a\u7684\u5143\u7d20\u4e2a\u6570\u51b3\u5b9a\uff0c\u672a\u586b\u6ee1\u7684\u5143\u7d20\u586b0\uff0c\u6ca1\u95ee\u9898\uff1b E\u9879\u662f\u6b63\u5e38\u7684\u4e8c\u7ef4\u6570\u7ec4\u521d\u59cb\u5316\u65b9\u5f0f\uff0c\u672b\u5c3e\u7684\u9017\u53f7\u65e0\u5173\u7d27\u8981\uff0c\u6ca1\u95ee\u9898\uff1b F\u9879\u6ca1\u6709\u786e\u5b9a\u6570\u7ec4\u7b2c\u4e00\u7ef4\u7684\u5927\u5c0f\uff0c\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\u3002  <p></p>"},{"location":"note/Computer_Science/FPA/#week10","title":"Week10","text":"<p>Some points: 1.Array as a parameter is pointer.But it can be used with operator[],which makes it look like an array.So the four prototypes below are equal:</p> <pre><code>int sum(int *a,int n);\nint sum(int *,int n);\nint sum(int a[],int n);\nint sum(int [],int n);\n</code></pre> <p> 2.Array variable is const pointer,that's why it cannot be assigned.  P1.\u5173\u4e8eC\u8bed\u8a00\u6307\u9488\u7684\u8fd0\u7b97\uff1a\u6307\u9488\u53ea\u6709\u52a0\u51cf\u64cd\u4f5c\uff0c\u6ca1\u6709\u4e58\u9664\u64cd\u4f5c\u3002\u6307\u9488\u53ef\u4ee5\u52a0\u5e38\u6570\u3001\u51cf\u5e38\u6570\uff1b\u76f8\u540c\u7c7b\u578b\u7684\u6307\u9488\u53ef\u4ee5\u76f8\u52a0\u3001\u76f8\u51cf\u3002(T/F)</p> answer &amp; analysis F.\u76f8\u540c\u7c7b\u578b\u7684\u6307\u9488\u53ef\u4ee5\u505a\u51cf\u6cd5\u8868\u793a\u4ed6\u4eec\u7684\u8ddd\u79bb\uff0c\u800c\u76f8\u52a0\u6ca1\u6709\u610f\u4e49\u3002  <p></p> <p>P2.\u5047\u8bbe\u6709\u5b9a\u4e49\u5982\u4e0b\uff1a int array[10]; \u5219\u8be5\u8bed\u53e5\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6570\u7ec4array\u3002\u5176\u4e2darray\u7684\u7c7b\u578b\u662f\u6574\u578b\u6307\u9488\uff08\u5373\uff1a int *\uff09\u3002(T/F)</p> answer &amp; analysis F.array\u7684\u7c7b\u578b\u662f\u6570\u7ec4\u540d\u3002\u6ce8\u610farray\u5b58\u50a8\u7684\u662farray[0]\u7684\u5730\u5740\uff0carray\u4ee3\u8868\u7684\u662f\u6574\u4e2a\u6570\u7ec4\uff0c\u56e0\u6b64&amp;array\u548carray\u867d\u7136\u6570\u503c\u76f8\u540c\uff0c\u4f46\u610f\u4e49\u4e0d\u540c\u3002(&amp;array)+1\u4f1a\u4f7f\u5730\u5740\u5411\u540e\u79fb\u52a840\u4e2aByte\uff0c\u800carray+1\u53ea\u4f1a\u79fb\u52a84\u4e2aByte\u3002  \u53e6\u4e00\u79cd\u65b9\u6cd5\uff1a\u8003\u8651sizeof\u3002sizeof(array)\u663e\u7136\u662f40\uff0c\u800c\u5bf9\u4e8e\u6574\u578b\u6307\u9488\u53d8\u91cfint *p,sizeof(p)=8.  <p> P3.If variables are defined and assigned correctly, the expression ______ is wrong.</p> <p>A.a&amp;b B.a^b C.&amp;&amp;x D.a, b</p> answer &amp; analysis C. &amp;x\u5df2\u7ecf\u5f97\u5230\u4e86x\u7684\u5730\u5740\uff0c\u800c(&amp;x)\u662f\u76f4\u63a5\u8bbf\u95ee\u5230\u7684\uff0c\u5e76\u6ca1\u6709\u5b58\u50a8\u5728\u67d0\u4e2a\u53d8\u91cf\u4e2d\uff0c\u6240\u4ee5&amp;(&amp;x)\u7684\u64cd\u4f5c\u662f\u65e0\u6548\u7684\u3002  <p> P4.According to the declaration: int a[10], *p=a; the expression __ is wrong.</p> <p>A.a[9] B.p[5] C.*p++ D.a++</p> answer &amp; analysis D.\u6570\u7ec4\u540d\u53ef\u4ee5\u770b\u4f5c\u5e38\u91cf\u6307\u9488\uff0c\u4e0d\u80fd\u8fdb\u884c++\u64cd\u4f5c\u3002  <p> P5. Among the following assignments or initializations, __ is wrong.</p> <p>A.char str[10]; str=\"string\"; B.char str[]=\"string\"; C.char p=\"string\"; D.char p; p=\"string\";</p> answer &amp; analysis A. \u5b57\u7b26\u6570\u7ec4\u53ea\u80fd\u5728\u5b9a\u4e49\u65f6\u624d\u80fd\u7528\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u521d\u59cb\u5316\uff0c\u5b9a\u4e49\u540e\u4e0d\u884c\u3002\u5b57\u7b26\u4e32\u5728\u88ab\u5b9a\u4e49\u65f6\u548c\u5b9a\u4e49\u540e\u90fd\u80fd\u8fd9\u4e48\u5e72\u3002  <p></p> <p>P6. According to the declaration: int (*p)[10];, p is a(n) __. A.pointer B.array C.function D.element of array</p> answer &amp; analysis A.p\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u82e5\u5e72\u957f\u5ea6\u4e3a10\u7684\u4e00\u7ef4\u6570\u7ec4\u3002  <p> P7.Among the following statements, __ is equivalent to the declaration: int *p[4];.</p> <p>A.int  p[4]; B.int  p; C.int  (p[4]); D.int  (p)[4];</p> answer &amp; analysis C. []\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e*\u3002\u6ce8\u610f\u8fd9\u91ccC\u3001D\u9009\u9879\u7684\u533a\u522b\uff0c\u524d\u8005\u662f\u56db\u4e2a\u6307\u9488\u6784\u6210\u7684\u6307\u9488\u6570\u7ec4\uff0c\u540e\u8005\u662f\u6307\u5411\u957f\u5ea6\u4e3a4\u7684\u6570\u7ec4\u7684\u6307\u9488\u3002  \u6b64\u5916\uff0cint (*p)[4]\u7684\u7c7b\u578b\u662f(int *)[4],\u8fd9\u4e0eint **p\u4e0d\u540c\u3002  <p> P8.For the function declaration void f(char ** p)\uff0cthe definition __ of var makes the function call f(var) incorrect\u3002</p> <p>A.char var[10][10]; B.char var[10]; C.void var = NULL; D.char v=NULL, *var=&amp;v;</p> answer &amp; analysis A\u3002A \u4e2d var \u7684\u7c7b\u578b\u662f\u4e8c\u7ef4\u6570\u7ec4\uff0c\u4f20\u53c2\u65f6\u7684\u7c7b\u578b\u4e3a (*char)[10]\uff0c\u867d\u7136\u662f\u4e2a ( \u6570\u7ec4 / \u884c ) \u6307\u9488\uff0c\u4f46\u5e76\u4e0d\u662f\u4e8c\u91cd\u6307\u9488\u3002\u8fd9\u662f\u56e0\u4e3a\u4f20\u53c2\u65f6\u7684\u9690\u5f0f\u8f6c\u5316\u53ea\u80fd\u8f6c\u5316\u4e00\u5c42\uff0c\u56e0\u6b64\u4e00\u7ef4\u6570\u7ec4\u4f20\u53c2\u65f6\u5b8c\u5168\u7b49\u4ef7\u4e8e const \u6307\u9488\uff0c\u4f46\u662f\u4e8c\u7ef4\u6570\u7ec4\u5c31\u65e0\u6cd5\u7b49\u4ef7\u4e8e\u4e8c\u91cd\u6307\u9488\u3002  \u53e6\u5916 *var \u786e\u5b9e\u4ee3\u8868 var[0] \u8fd9\u4e2a\u6570\u7ec4\uff0c**var \u4e5f\u786e\u5b9e\u5c31\u662f var[0][0]\uff0c\u4f46\u662f\u6ce8\u610f\u8fd9\u91cc\u7684 * \u662f\u8fd0\u7b97\u7b26\u800c\u4e0d\u662f\u7c7b\u578b\u5b9a\u4e49\u3002\u4f5c\u4e3a\u7c7b\u578b\u5b9a\u4e49\u65f6\uff0c\u6570\u7ec4\u548c\u6307\u9488\u662f\u9700\u8981\u533a\u5206\u7684\u3002  B \u4e2d var \u7684\u7c7b\u578b\u662f\u6307\u9488\u6570\u7ec4\uff0c\u4f46\u662f\u7531\u4e8e\u6570\u7ec4\u9690\u5f0f\u8f6c\u5316\u7684\u95ee\u9898\uff0c\u5176\u4f20\u53c2\u65f6\u8868\u73b0\u51fa\u6765\u7684\u7c7b\u578b\u5c31\u662f char**\uff0c\u56e0\u6b64\u662f\u6b63\u786e\u7684\u3002  C \u4e2d var \u7684\u7c7b\u578b\u662f\u65e0\u7c7b\u578b\u6307\u9488\uff0c\u5b83\u53ef\u4ee5\u6307\u5411\u4efb\u4f55\u4e1c\u897f\u3002\u5982\u679c\u5b83\u6307\u5411\u7684\u662f\u4e00\u4e2a char*\uff0c\u90a3\u4e48\u5b83\u5c31\u7b26\u5408 char** \u7684\u7c7b\u578b\u8981\u6c42\u4e86\uff0c\u56e0\u6b64\u6b63\u786e\u3002  D \u4e2d var \u7684\u7c7b\u578b\u662f\u6b63\u7edf\u7684 char**\u3002  <p> P9.\u5bf9\u4e8e\u4ee5\u4e0b\u53d8\u91cf\u5b9a\u4e49\uff0c\u6b63\u786e\u7684\u8d4b\u503c\u662f\uff08\uff09\u3002</p> <p>char pc[5], s[10]; A.pc = s B.pc = s[0] C.pc = s D.pc = &amp;s</p> answer &amp; analysis C.\u9996\u5148pc\u662f\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0cA\u663e\u7136\u9519\u8bef\u3002*pc\u76f8\u5f53\u4e8epc[0],B\u53f3\u8fb9\u7684s[0]\u662f\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e0d\u80fd\u7ed9pc[0]\uff08\u5b57\u7b26\u4e32\uff09\uff1bD\u4e2d&amp;s\u662f\u6574\u4e2a\u5b57\u7b26\u6570\u7ec4\u7684\u5730\u5740\uff0c\u5982\u679c\u50a8\u5b58\u8d77\u6765\u5c31\u662f(char *)[10]\uff0c\u4e5f\u4e0d\u80fd\u8d4b\u7ed9pc[0]\uff1bC\u4e2d\u7684s\u662f\u5b57\u7b26\u6570\u7ec4\uff0c\u4f20\u9012\u65f6\u9690\u5f0f\u8f6c\u6362\u6210char *\uff0c\u53ef\u4ee5\u8d4b\u7ed9pc[0].  <p></p>"},{"location":"note/Computer_Science/FPA/#week11","title":"Week11","text":"<p>Some points: 1.char s = \"Hello world!\"\u4e2d\uff0cs\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u521d\u59cb\u5316\u4e3a\u6307\u5411\u4e00\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf\uff0c\u6240\u4ee5s\u5b9e\u9645\u4e0a\u662fconst char s\uff0c\u4f46\u7531\u4e8e\u5386\u53f2\u539f\u56e0\u7f16\u8bd1\u5668\u63a5\u53d7\u4e0d\u5e26const\u7684\u5199\u6cd5\u3002\uff08\u4f46\u662f\u8bd5\u56fe\u5bf9s\u6240\u6307\u7684\u5b57\u7b26\u4e32\u505a\u5199\u5165\u4f1a\u5bfc\u81f4\u4e25\u91cd\u540e\u679c\u3002\uff09\u5982\u679c\u8981\u4fee\u6539\u5b57\u7b26\u4e32\uff0c\u5219\u5e94\u5199\u6210\u6570\u7ec4char s[] = \"Hello World!\"\u3002  2.String Functions in the Standard Library strlen:</p> <pre><code>size_t strlen(const char *s)\n</code></pre> <p>return the length of a string('\\0' not included)  strcmp:</p> <pre><code>int strcmp(const char *s1,const char *s2);\n</code></pre> <p>compare two strings,return:</p> <pre><code>0 : s1 == s2\n&gt;0 \uff1as1 &gt; s2\n&lt;0 : s1 &lt; s2\n</code></pre> <p> strcpy</p> <pre><code>char *strcpy(char *restrict dst,const char *restrict stc);\n</code></pre> <p>\u628asrc\u7684\u5b57\u7b26\u4e32\u62f7\u8d1d\u5230dst\uff0crestrict\u8868\u660esrc\u548cdst\u4e0d\u91cd\u53e0\uff08C99\uff09\uff0c\u8fd4\u56dedst\uff08\u94fe\u8d77\u4ee3\u7801\uff09  strcat</p> <pre><code>char *strcat(char *restrict s1,const char *restrict s2);\n</code></pre> <p>\u628as2\u62f7\u8d1d\u5230s1\u540e\u9762\uff0c\u63a5\u6210\u4e00\u4e2a\u957f\u5b57\u7b26\u4e32\uff0c\u8fd4\u56des1\u3002  strchr/strrchr</p> <pre><code>char *strchr(const char *s,int c);\nchar *strrchr(const char *s,int c);\n</code></pre> <p>\u5728\u5b57\u7b26\u4e32\u4e2d\u627e\u5b57\u7b26\uff0c\u8fd4\u56deNULL\u8868\u793a\u6ca1\u6709\u627e\u5230\u3002  strstr/strcasestr</p> <pre><code>char *strstr(const char *s1,const char *s2);\nchar *strcasestr(const char *s1,const char *s2);\n</code></pre> <p>\u5728\u5b57\u7b26\u4e32\u4e2d\u627e\u5b57\u7b26\u4e32\u3002   P1.\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u9488\u53d8\u91cf\u662f\u53ef\u4ee5\u76f4\u63a5\u76f8\u4e92\u8d4b\u503c\u7684\u3002(T/F)</p> answer &amp; analysis F.\u4f1a\u62a5\u9519\uff0c\u4e00\u822c\u9700\u8981\u5f3a\u5236\u8f6c\u6362\u3002 \u4f46\u4e5f\u6709\u4f8b\u5916\uff0c\u5982void*\u662f\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c\u7ed9\u5176\u4ed6\u6307\u9488\u7684\u3002  <p></p> <p>P2.\u4e24\u4e2a\u4efb\u610f\u7c7b\u578b\u7684\u6307\u9488\u53ef\u4ee5\u4f7f\u7528\u5173\u7cfb\u8fd0\u7b97\u7b26\u6bd4\u8f83\u5927\u5c0f\u3002(T/F)</p> answer &amp; analysis F.\u540c\u7c7b\u578b\u7684\u6307\u9488\u80fd\u7528\u5173\u7cfb\u8fd0\u7b97\u7b26\u6bd4\u8f83\u5927\u5c0f\uff0c\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u9488\u5219\u4e0d\u80fd\u3002  <p></p> <p>P3.\u4ee5\u4e0b\u54ea\u4e2a\u5b9a\u4e49\u4e2d\u7684p\u4e0d\u662f\u6307\u9488\uff0c\u8bf7\u9009\u62e9\u6070\u5f53\u7684\u9009\u9879\uff1a</p> <p>A.char p; B.char (p)[10]; C.char p[6]; D.\u7ed9\u51fa\u7684\u4e09\u9879\u4e2d\uff0cp\u90fd\u662f\u6307\u9488</p> answer &amp; analysis C.char *p[6]\u662f\u6307\u9488\u6570\u7ec4\u3002  <p> P4.\u82e5\u6709\u5b9a\u4e49char str[]={\u201cPython\u201d, \u201cSQL\u201d, \u201cJAVA\u201d, \u201cPHP\u201d, \u201cC++\u201d};\u5219\u8868\u8fbe\u5f0fstr[1] &gt; *str[3]\u6bd4\u8f83\u7684\u662f\uff1a</p> <p>A.\u5b57\u7b26P\u548c\u5b57\u7b26J B.\u5b57\u7b26\u4e32SQL\u548c\u5b57\u7b26\u4e32PHP C.\u5b57\u7b26\u4e32Python\u548c\u5b57\u7b26\u4e32JAVA D.\u5b57\u7b26S\u548c\u5b57\u7b26P</p> answer &amp; analysis D. \u6ce8\u610f[]\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e*\uff0c\u800cstr[1]\u6307\u5411\"SQL\"\u7684\u9996\u5730\u5740\uff0c\u89e3\u5e94\u7528\u5f97\u5230\u5b57\u7b26S\uff0c\u540c\u7406*str[3]\u5f97\u5230\u5b57\u7b26P\u3002  <p></p> <p></p>"},{"location":"note/Computer_Science/FPA/#week14","title":"Week14","text":"<p>1.\u5728\u5168\u5c40\u53d8\u91cf\u524d\u52a0\u4e0astatic\u5c31\u4f7f\u5f97\u5b83\u79f0\u4e3a\u53ea\u80fd\u5728\u6240\u5728\u7f16\u8bd1\u5355\u5143\u4e2d\u88ab\u4f7f\u7528\u7684\u5168\u5c40\u53d8\u91cf\uff08\u9759\u6001\u53d8\u91cf\uff09\u3002\u7c7b\u4f3c\u5730\uff0c\u5728\u51fd\u6570\u524d\u9762\u52a0\u4e0astatic\u5c31\u4f7f\u5f97\u5b83\u6210\u4e3a\u53ea\u80fd\u5728\u6240\u5728\u7f16\u8bd1\u5355\u5143\u4e2d\u88ab\u4f7f\u7528\u7684\u51fd\u6570\uff08\u9759\u6001\u51fd\u6570\uff09\u3002  2.\u5173\u4e8e\u58f0\u660e\u548c\u5b9a\u4e49\uff1a\u58f0\u660e\u662f\u4e0d\u4ea7\u751f\u4ee3\u7801\u7684\u4e1c\u897f\uff0c\u5305\u62ec\u51fd\u6570\u539f\u578b\u3001\u53d8\u91cf\u58f0\u660e\u3001\u7ed3\u6784\u58f0\u660e\u3001\u5b8f\u58f0\u660e\u3001\u679a\u4e3e\u58f0\u660e\u3001\u7c7b\u578b\u58f0\u660e\u3001inline\u51fd\u6570\u7b49\uff1b\u800c\u5b9a\u4e49\u662f\u4ea7\u751f\u4ee3\u7801\u7684\u4e1c\u897f\u3002\u4e0b\u9762\u662f\u51e0\u4e2a\u58f0\u660e\u7684\u4f8b\u5b50\uff1a</p> <pre><code>\u51fd\u6570\u539f\u578b\u58f0\u660e\uff1aint func(int a,int b);\n\u53d8\u91cf\u58f0\u660e\uff1aextern int a;\uff08\u58f0\u660e\u4e00\u4e2a\u6574\u578b\u5168\u5c40\u53d8\u91cf\uff09\n\u679a\u4e3e\u58f0\u660e\uff1aenum num\uff5bone = 1,two,three\uff5d;\n</code></pre> <p> 3.\u6807\u51c6\u5934\u6587\u4ef6\u7ed3\u6784\uff1a</p> <pre><code>#ifndef __A_H__\n#define __A_H__\n...\n#endif\n</code></pre> <p>\u8fd0\u7528\u6761\u4ef6\u7f16\u8bd1\u5b8f\uff0c\u4fdd\u8bc1\u8fd9\u4e2a\u5934\u6587\u4ef6\u5728\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143\u4e2d\u53ea\u4f1a\u88ab#include\u4e00\u6b21\u3002  4.\u524d\u5411\u58f0\u660e\uff1a</p> <pre><code>struct Node;\ntypedef struct _list\n{\n    Node *head;\n    Node *tail;\n}\n</code></pre> <p>\u8fd9\u91cc\u4e0d\u9700\u8981\u5177\u4f53\u77e5\u9053Node\u662f\u600e\u6837\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528struct Node\u6765\u544a\u8bc9\u7f16\u8bd1\u5668Node\u662f\u4e00\u4e2a\u7ed3\u6784.  </p> <p>P1.\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5982\u679c\u6ca1\u6709\u8d4b\u503c\uff0c\u5176\u5b58\u50a8\u5355\u5143\u4e2d\u5c06\u662f\u968f\u673a\u503c\u3002(T/F)</p> answer &amp; analysis F. \u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5982\u679c\u6ca1\u6709\u663e\u5f0f\u521d\u59cb\u5316\uff0c\u4f1a\u88ab\u7a0b\u5e8f\u81ea\u52a8\u521d\u59cb\u5316\u4e3a0\uff08\u5bf9\u6570\u503c\u578b\u53d8\u91cf\uff09\u6216\u7a7a\u5b57\u7b26\uff08\u5bf9\u5b57\u7b26\u578b\u53d8\u91cf\uff09\u3002  <p> P2.C\u8bed\u8a00\u4e2d\u5b9a\u4e49\u7684\u9759\u6001\u53d8\u91cf\u5b58\u653e\u5728\u6808\u533a\uff0c\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u7a7a\u95f4\u4f4d\u4e8e\u5806\u533a\u3002(T/F)</p> answer &amp; analysis F. \u5e38\u89c1\u7684\u5185\u5b58\u5206\u533a\u53ca\u5b58\u50a8\u5185\u5bb9\uff1a  &gt;\u4ee3\u7801\u533a\uff1a\u5b58\u653e\u7a0b\u5e8f\u7684\u4ee3\u7801\uff08\u5373CPU\u6267\u884c\u7684\u673a\u5668\u6307\u4ee4\uff09\uff0c\u53ea\u8bfb\u3002 \u5e38\u91cf\u533a\uff1a\u5b58\u653e\u5e38\u91cf\uff08\u5982\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\uff09\u3002 \u9759\u6001\u533a\uff08\u5168\u5c40\u533a\uff09\uff1a\u9759\u6001\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf\u7684\u5b58\u50a8\u8d8b\u4e8e\u662f\u4e00\u8d77\u7684\uff0c\u4e00\u65e6\u9759\u6001\u533a\u7684\u5185\u5b58\u88ab\u5206\u914d\uff0c\u9759\u6001\u533a\u7684\u5185\u5b58\u77e5\u9053\u7a0b\u5e8f\u5168\u90e8\u7ed3\u675f\u4e4b\u540e\u624d\u4f1a\u88ab\u91ca\u653e\u3002 \u5806\u533a\uff1a\u8c03\u7528malloc\u51fd\u6570\u7533\u8bf7\u7684\u52a8\u6001\u7a7a\u95f4\u3002 \u6808\u533a\uff1a\u5b58\u653e\u51fd\u6570\u5185\u7684\u5c40\u90e8\u53d8\u91cf\u3001\u5f62\u53c2\u548c\u51fd\u6570\u8fd4\u56de\u503c\u3002\u6808\u533a\u91cc\u7684\u6570\u636e\u4f5c\u7528\u8303\u56f4\u8fc7\u4e86\u4e4b\u540e\uff0c\u7cfb\u7edf\u4f1a\u56de\u6536\u81ea\u52a8\u7ba1\u7406\u6808\u533a\u7684\u5185\u5b58\u3002   <p>P3.C\u8bed\u8a00\u7684\u5168\u5c40\u53d8\u91cf\u521d\u59cb\u5316\u662f\u5728\u4ee5\u4e0b\u54ea\u4e2a\u9636\u6bb5\u5b8c\u6210\u7684\uff1a</p> <p>A.main()\u51fd\u6570\u5f00\u59cb\u540e B.\u7f16\u8bd1\u94fe\u63a5\u7684\u65f6\u5019 C.main()\u51fd\u6570\u5f00\u59cb\u524d D.\u7b2c\u4e00\u6b21\u7528\u5230\u7684\u65f6\u5019</p> answer &amp; analysis C. C\u8bed\u8a00\u7684\u5168\u5c40\u53d8\u91cf\u521d\u59cb\u5316\u662f\u5728main()\u51fd\u6570\u5f00\u59cb\u524d\u5b8c\u6210\u7684\u3002  <p> </p>"},{"location":"note/Computer_Science/FPA/#week15","title":"Week15","text":"<p>1.\u683c\u5f0f\u5316\u7684\u8f93\u5165\u8f93\u51fa\uff1a \u00b7printf</p> <p>%[flags][width][.prec][hIL]type</p> <p>\u00b7scanf</p> <p>%[flag]type</p> flag \u542b\u4e49 - \u5de6\u5bf9\u9f50 + \u5728\u524d\u9762\u653e+\u6216- (space) \u6b63\u6570\u7559\u7a7a 0 0\u586b\u5145 <p></p> width\u6216prec \u542b\u4e49 number \u6700\u5c0f\u5b57\u7b26\u6570 * \u4e0b\u4e00\u4e2a\u53c2\u6570\u662f\u5b57\u7b26\u6570 .number \u5c0f\u6570\u70b9\u540e\u7684\u4f4d\u6570 .* \u4e0b\u4e00\u4e2a\u53c2\u6570\u662f\u5c0f\u6570\u70b9\u540e\u7684\u4f4d\u6570 <p></p> \u7c7b\u578b\u4fee\u9970 \u542b\u4e49 hh \u5355\u4e2a\u5b57\u8282 h short l long ll long long L long double <p></p> type \u7528\u4e8e type \u7528\u4e8e i\u6216d int g float u unsigned G float o \u516b\u8fdb\u5236 a\u6216A \u5341\u516d\u8fdb\u5236\u6d6e\u70b9 x \u5341\u516d\u8fdb\u5236 c char X \u5b57\u6bcd\u5927\u5199\u7684\u5341\u516d\u8fdb\u5236 s \u5b57\u7b26\u4e32 f\u6216F float\uff0c6 p \u6307\u9488 <p></p> <p>scanf:%[flag]type</p> flag \u542b\u4e49 flag \u542b\u4e49 * \u8df3\u8fc7 l long,double \u6570\u5b57 \u6700\u5927\u5b57\u7b26\u6570 ll long long hh char L long double h short <p>scanf:%[flag]type</p> type \u7528\u4e8e type \u7528\u4e8e d int s \u5b57\u7b26\u4e32(\u5355\u8bcd) i \u6574\u6570\uff0c\u53ef\u80fd\u4e3a\u5341\u516d\u8fdb\u5236\u6216\u516b\u8fdb\u5236 [...] \u6240\u5141\u8bb8\u7684\u5b57\u7b26 u unsigned int p \u6307\u9488 o \u516b\u8fdb\u5236 x \u5341\u516d\u8fdb\u5236 a,e,f,g float c char <p>\u6ce8\u610fprintf\u548cscanf\u7684\u8fd4\u56de\u503c\uff1a \u00b7\u8bfb\u5165\u7684\u9879\u76ee\u6570 \u00b7\u8f93\u51fa\u7684\u5b57\u7b26\u6570</p> <p>2.file</p> <p>\u00b7 FIlE fopen(const char restrict path,const char restrict mode); \u00b7 int fclose(FILE stream); \u00b7 fscanf(FILE,...) \u00b7 fprintf(FILE,..)</p> <p>\u6253\u5f00\u6587\u4ef6\u7684\u6807\u51c6\u4ee3\u7801\uff1a</p> <pre><code>FILE *fp = fopen(\"file\",\"r\");\nif (fp)\n{\n    fscanf(fp,...);\n    fclose(fp);\n}\nelse\n{\n    ...\n}\n</code></pre>"},{"location":"note/Computer_Science/FPA/#fopen","title":"fopen","text":"\u6307\u4ee4 \u4f5c\u7528 r \u6253\u5f00\u53ea\u8bfb r+ \u6253\u5f00\u8bfb\u5199\uff0c\u4ece\u6587\u4ef6\u5934\u5f00\u59cb w \u6253\u5f00\u53ea\u5199\u3002\u5982\u679c\u4e0d\u5b58\u5728\u5219\u65b0\u5efa\uff0c\u5982\u679c\u5b58\u5728\u5219\u6e05\u7a7a w+ \u6253\u5f00\u8bfb\u5199\u3002\u5982\u679c\u4e0d\u5b58\u5728\u5219\u65b0\u5efa\uff0c\u5982\u679c\u5b58\u5728\u5219\u6e05\u7a7a a \u6253\u5f00\u8ffd\u52a0\u3002\u5982\u679c\u4e0d\u5b58\u5728\u5219\u65b0\u5efa\uff0c\u5982\u679c\u5b58\u5728\u5219\u4ece\u6587\u4ef6\u5c3e\u5f00\u59cb ..x \u53ea\u65b0\u5efa\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u4e0d\u80fd\u6253\u5f00 <p> P1.\u4ee5\u4e0b\u4ee3\u7801\u7684\u8f93\u51fa\u4e3a____.</p> <pre><code>int x = -1;\nprintf(\"%d\",(unsigned int)x);\n</code></pre> answer &amp; analysis -1. unsigned int\u7684\u8f6c\u6362\u53ea\u662f\u4ee5\u65e0\u7b26\u53f7\u7684\u65b9\u5f0f\u6765\u7406\u89e3\u6570\u636e\uff0c\u5e76\u4e0d\u4f1a\u6539\u53d8x\u7684\u4e8c\u8fdb\u5236\u503c\u3002\u5bf9\u4e8eprintf\u6765\u8bf4\uff0c\u5b83\u8981\u8f93\u51fa\u7684\u662f%d\uff08\u6709\u7b26\u53f7\u6570\uff09\uff0c\u6240\u4ee5\u8f93\u51fa\u65f6\u4ecd\u5f53\u4f5c\u6709\u7b26\u53f7\u6574\u578b\u6765\u7406\u89e3\u3002  <p> P2.\u4ee5\u4e0b\u4ee3\u7801\u7684\u8f93\u51fa\u4e3a_____.</p> <pre><code> char str[100] = \"ZhejiangU 1 3 5\",s[10];\n int n;\n sscanf(str,\"%s %*d %d %*d\",s,&amp;n);\n printf(\"%s\",&amp;s[n]);\n</code></pre> answer &amp; analysis jiangU. %*d\u8868\u793a\u8bfb\u53d6\u7684\u662f\u4e00\u4e2a\u6574\u578b\uff0c\u4f46\u662f\u76f4\u63a5\u5ffd\u7565\uff0c\u4e0d\u5b58\u5230\u53d8\u91cf\u4e2d\u3002\u6240\u4ee5sscanf\u8bfb\u53d6\u5230\u7684n\u662f\u7b2c\u4e8c\u4e2a\u6570\u5b573\uff0c\u7136\u540e\u8f93\u51fas[3]\u5f00\u59cb\u7684\u5b57\u7b26\u4e32\uff0c\u5373jiangU."},{"location":"note/Computer_Science/FPA/#resizable-array","title":"Resizable array","text":"<p>Definition:</p> <pre><code>typedef struct\n{\n    int *array;\n    int size;\n}Array;\n</code></pre> <p>array_create:</p> <pre><code>Array array_create(int init_size)\n{\n    Array a;\n    a.array = (int *)malloc(sizeof(int) * init_size);\n    a.size = init_size;\n    return a;\n}\n</code></pre> <p>array_free:</p> <pre><code>void array_free(Array *a)\n{\n    free(a-&gt;array);\n    a-&gt;array = NULL;\n    a-&gt;size = 0;\n}\n</code></pre> <p>array_size:</p> <pre><code>int array_size(const Array *a)\n{\n    return a-&gt;size;\n}\n</code></pre> <p>array_at(the first index is 0):</p> <pre><code>int *array_at(Array *a,int index)\n{\n    if (index &gt;= a-&gt;size)\n    {\n        array_inflate(a,index - a-&gt;size);\n    }\n    return &amp;(a-&gt;array[index]);\n}\n</code></pre> <p>array_inflate</p> <pre><code>void array_inflate(Array *a,int more_size)\n{\n    int *p = (int *)malloc(sizeof(int) * (a-&gt;size + more_size));\n    for (int i=0;i&lt;a-&gt;size;i++) p[i] = a-&gt;array[i];\n      //or:memcpy((void *)p,(void *)a-&gt;array,a-&gt;size*sizeof(int));\n    free(a-&gt;array); \n    a-&gt;array = p;\n    a-&gt;size = a-&gt;size + more_size;\n}\n</code></pre> <p></p>"},{"location":"note/Computer_Science/FPA/#linked-array","title":"Linked Array","text":"<p>Definition:</p> <pre><code>typedef struct _array\n{\n    int *array;\n    int size;\n    struct _array *next;\n}Array;\n</code></pre> <p>array_create:</p> <pre><code>Array array_create()\n{\n    Array a;\n    a.array = (int *)malloc(sizeof(int) * BLOCK_SIZE);\n    a.size = BLOCK_SIZE;\n    a.next = 0;\n    return a;\n}\n</code></pre> <p>array_free:</p> <pre><code>void array_free(Array *a)\n{\n    free(a-&gt;array);\n    a-&gt;size = 0;\n    if (a-&gt;next)\n    {\n        array_free(a-&gt;next);\n        free(a-&gt;next);\n    }\n}\n</code></pre> <p>array_size:</p> <pre><code>int array_size(Array *a)\n{\n    if (a-&gt;next == NULL)\n    {\n        return a-&gt;size;\n    }\n    else\n    {\n        return a-&gt;size + array_size(a-&gt;next);\n    }\n}\n</code></pre> <p>array_at:</p> <pre><code>int *array_at(Array *a,int index)\n{\n    if (index &lt; a-&gt;size)\n    {\n        return &amp;(a-&gt;array[index]);\n    }\n    else\n    {\n        return array_at(a-&gt;next,index - a-&gt;size);\n    }\n}\n</code></pre> <p>array_inflate:</p> <pre><code>void array_inflate(Array *a)\n{\n    Array new_array;\n    new_array-&gt;array = (int *)malloc(sizeof(int) * BLOCK_SIZE);\n    new_array-&gt;size = BLOCK_SIZE;\n    new_array-&gt;next = 0;\n    for (Array pre = a;pre-&gt;next;pre = pre-&gt;next) ;\n    pre-&gt;next = &amp;new_array;\n}\n</code></pre> <p></p>"},{"location":"note/Computer_Science/FPA/#linked-list","title":"Linked List","text":"<p>defintion:</p> <pre><code>typedef struct _node\n{\n    int value;\n    struct _node *next;\n    struct _node *prev;\n}Node;\ntypedef struct\n{\n    Node *head;\n    Node *tail;\n}List;\n</code></pre> <p>list_create:</p> <pre><code>List *list_create()\n{\n    List *list = malloc(sizeof(List));\n    list-&gt;head = NULL;\n    list-&gt;tail = NULL;\n    return list;\n}\n</code></pre> <p>insert_head:</p> <pre><code>void insert_head(List *list,int value)\n{\n    Node *node = malloc(sizeof(Node));\n    node-&gt;value = val;\n    node-&gt;prev = NULL;\n    if (list-&gt;head)\n    {\n        node-&gt;next = list-&gt;head;\n        list-&gt;head-&gt;prev = node;\n        list-&gt;head = node;\n    }\n    else\n    {\n        node-&gt;next = node-&gt;prev = NULL;\n        list-&gt;head = list-&gt;tail = node;\n    }\n}\n</code></pre> <p>append_tail:</p> <pre><code>void append_tail(List *list,int val)\n{\n    Node *node = malloc(sizeof(Node));\n    node-&gt;value = val;\n    node-&gt;next = NULL;\n    if (list-&gt;tail)\n    {\n        node-&gt;prev = list-&gt;tail;\n        list-&gt;tail-&gt;next = node;\n        list-&gt;tail = node;\n    }\n    else\n    {\n        node-&gt;prev = NULL;\n        list-&gt;head = list-&gt;tail = node;\n    }\n}\n</code></pre> <p>insert_middle:</p> <pre><code>void insert_middle(List *list,int index,int val)\n{\n    int cnt = 1;\n    Node *p = list-&gt;head;\n    for (;cnt&lt;index &amp;&amp; p;p = p-&gt;next,cnt++) ;\n    Node *node = malloc(sizeof(Node));\n    node-&gt;value = val;\n    node-&gt;prev = p;\n    node-&gt;next = p-&gt;next;\n    p-&gt;next-&gt;prev = node;\n    p-&gt;next = node;\n}\n</code></pre> <p>remove:</p> <pre><code>void remove_node(List *list,int val)\n{\n    Node *p = list-&gt;head;\n    for (;p;)\n    {\n        if (p-&gt;value == val)\n        {\n            if (list-&gt;head == p)\n            {\n                list-&gt;head = p-&gt;next;\n                if (list-&gt;tail == p)\n                {\n                    list-&gt;tail = NULL;\n                }\n                Node *tmp = p;\n                p = p-&gt;next;\n                free(tmp);\n            }\n            else if (list-&gt;tail == p)\n            {\n                list-&gt;tail = p-&gt;prev;\n                p-&gt;prev-&gt;next = NULL;\n                free(p);\n                break;\n            }\n            else\n            {\n                p-&gt;prev-&gt;next = p-&gt;next;\n                p-&gt;next-&gt;prev = p-&gt;prev;\n                Node *tmp = p;\n                p = p-&gt;next;\n                free(tmp);\n            }\n        }\n        else p = p-&gt;next;\n    }\n}\n</code></pre> <p>traversal:</p> <pre><code>void traversal(List *list)\n{\n    for (Node *p = list-&gt;head;p;p = p-&gt;next)\n        ...\n}\n</code></pre> <p>search:</p> <pre><code>int search(List *list,int val)\n{\n    int index = 1;\n    for (Node *p = list-&gt;head;p;p = p-&gt;next,index++)\n        if (p-&gt;value == val)\n        {\n            return index;\n        }\n    return -1;\n}\n</code></pre> <p>free:</p> <pre><code>void list_free(List *list)\n{\n    for (Node *p = list-&gt;head;p;)\n    {\n        Node *tmp = p;\n        p = p-&gt;next;\n        free(tmp);\n    }\n    list-&gt;head = list-&gt;tail = NULL;\n    free(list);\n}\n</code></pre> <p> </p>"},{"location":"note/Computer_Science/FPA/#_1","title":"\u6742\u9879","text":"<p>1.\u5173\u4e8e\u5b57\u7b26\u4e32\u957f\u5ea6\uff1a\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\\ddd\u65f6\u53ef\u80fd\u4e3a\u516b\u8fdb\u5236\u8f6c\u4e49\u5b57\u7b26\uff0c\u53d6\u51b3\u4e8e\u540e\u7eed\u662f\u5426\u4e3a\u5408\u6cd5\u7684\u516b\u8fdb\u5236\uff0c\u4ee5\\\u5f00\u59cb\uff0c\u6700\u5c111\u4f4d\uff0c\u6700\u591a3\u4f4d\u3002\u6b64\u5916\u5e94\u6ce8\u610fstrlen\u548csizeof\u7684\u533a\u522b\u3002 examples:</p> <pre><code>char str[] = \"hello\\61234\";\nprintf(\"%s\\n\",str);\nprintf(\"%d %d\\n\",strlen(str),sizeof(str));\n\noutput:\nhello1234\n9 10\n\n\n\nchar str[] = \"123\\029\\08\";\nprintf(\"%d %d\\n,strlen(str),sizeof(str));\n\noutput:5 8\n</code></pre> <p></p> <p>2.\u5173\u4e8esizeof\u95ee\u9898\uff1a</p> <p>\uff081\uff09sizeof\u662fC\u8bed\u8a00\u4e2d\u7684\u4e00\u4e2a\u8fd0\u7b97\u7b26\uff08\u800c\u975e\u51fd\u6570\uff01\uff09\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u67e5\u8be2\u5360\u636e\u7684\u7a7a\u95f4\u5b57\u8282\u6570\u3002 \u5e38\u89c1\u7684\u7c7b\u578b\u53ca\u5176\u6240\u5360\u7684\u5b57\u8282\u6570: (unsigned)char(1 Byte), (unsigned) short(2 Byte), (unsigned) int(4 Byte(64bit)), (unsigned) long(4 Byte), (unsigned) long long(8 Byte), float(4 Byte),long double(16 Byte(64bit)), pointer(8 Byte(64bit)). \uff082\uff09sizeof\u540e\u7684\u64cd\u4f5c\u6570\u53ef\u4ee5\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\u6216\u8005\u62ec\u5728\u62ec\u53f7\u91cc\u7684\u7c7b\u578b\u540d\uff0c\u4e14\u4f1a\u5ffd\u7565\u62ec\u53f7\u91cc\u7684\u5404\u79cd\u8fd0\u7b97\u3002 \uff083\uff09sizeof\u7684\u4e24\u79cd\u7528\u6cd5\uff1a sizeof unary-expression sizeof (type-name)</p> <p>An example:</p> <pre><code>char ch = 'a';\nprintf(\"%lu\\n\",sizeof(ch));\nprintf(\"%lu\\n\",sizeof(ch + 1));\nprintf(\"%lu\\n\",sizeof('a'));\n\noutput:\n1\n4\n4 ('a'\u662f\u5b57\u7b26\u5e38\u91cf\uff0c\u88ab\u770b\u6210int\u7c7b\u578b)\n</code></pre> <p></p> <p>3.\u5173\u4e8e\u8fd0\u7b97\u7b26\",\":\u9017\u53f7\u8fd0\u7b97\u7b26\u4f1a\u987a\u5e8f\u6267\u884c\u4e00\u7cfb\u5217\u8fd0\u7b97\u3002\u6574\u4e2a\u9017\u53f7\u8868\u8fbe\u5f0f\u7684\u503c\u662f\u4ee5\u9017\u53f7\u5206\u9694\u7684\u5217\u8868\u4e2d\u6700\u540e\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u3002 </p> <p>4.\u76f8\u540c\u7c7b\u578b\u7684\u6307\u9488\u76f8\u51cf\u7ed3\u679c\u4e3a\u4e24\u6307\u9488\u4e4b\u95f4\u5dee\u4e86\u591a\u5c11\u5355\u4f4d\u8ddd\u79bb\uff0c\u800c\u4e0d\u662f\u6307\u9488\u7684\u503c\u76f8\u51cf\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <pre><code>int a[] = {1,2,3,4,5};\nint *p = a,*q = &amp;a[2];\nprintf(\"%lu\\n\",q - p);\nprintf(\"%d\\n\",(int)&amp;a[2] - (int)a);\n\n\noutput:\n2\n8\n</code></pre>"},{"location":"note/Computer_Science/FPA/#about-operator-precedence","title":"About operator precedence","text":"\u4f18\u5148\u7ea7 \u8fd0\u7b97\u7b26 \u7ed3\u5408\u6027/\u76ee\u6570 1 []\u6570\u7ec4 () / 1 -&gt;\u7ed3\u6784 / 2 -\u53d6\u8d1f ++ -- \u53f3/\u5355 2 \uff08\u7c7b\u578b\uff09 \u53f3 2 * &amp;\u6307\u9488/\u5730\u5740 \u53f3/\u5355 2 !\u975e ~\u6309\u4f4d\u53cd \u53f3/\u5355 2 sizeof \u53f3 3 * / % /\u53cc 4 + - /\u53cc 5 &lt;&lt; &gt;&gt; /\u53cc 6 &gt;(=) &lt;(=) /\u53cc 7 == != /\u53cc 8/9/10 &amp;/^/|\u4f4d /\u53cc 11/12 &amp;&amp; || /\u53cc 13 ?: \u53f3/\u4e09 14 \u8d4b\u503c \u53f3 15 , / <p>\u5355\u76ee&gt;\u53cc\u76ee </p>"},{"location":"note/Computer_Science/FPA/#about-escape-char","title":"About escape char","text":"char meaning \\b back position \\t next table stop \\\" double quote \\' single quote \\n new line \\r return the carriage"},{"location":"note/Computer_Science/FPA/#some-common-c-keywords","title":"Some Common C Keywords","text":"<p>auto  bool(C23) break case char const continue default do double else enum extern false(C23) float for goto if inline int long register return short signed sizeof static sturct switch true(C23) typedef union unsigned void while</p> <p>Pay attention:define and include are not keywords!</p> <p> </p>"},{"location":"note/Computer_Science/FPA/#translation","title":"translation:","text":"<p>adjacent\u76f8\u90bb\u7684 argument\u53c2\u6570\uff08\u5b9e\u53c2\uff1f\uff09 assignment operator\uff08\u8d4b\u503c\u8fd0\u7b97\u7b26\uff09 binary\u4e8c\u8fdb\u5236 capital\u5927\u5199\u5b57\u6bcd coefficient\u7cfb\u6570 convert\u8f6c\u6362 decimal\u5341\u8fdb\u5236 exponent\u6307\u6570 hexadecimal\u5341\u516d\u8fdb\u5236 mechanism\u673a\u5236 octal\u516b\u8fdb\u5236 parameter\u53c2\u6570\uff08\u5f62\u53c2\uff1f\uff09 polynomial\uff08\u591a\u9879\u5f0f\uff09 prototype\u539f\u578b recursion\u9012\u5f52 scope\u8303\u56f4 string literal\u5b57\u7b26\u4e32\u5b57\u9762\u91cf sub expression\u5b50\u8868\u8fbe\u5f0f unary operator\u5355\u76ee\u8fd0\u7b97\u7b26</p> <p> </p>"},{"location":"note/Computer_Science/FPA/#several-tiny-points","title":"several tiny points:","text":""}]}